name: Build Go-Proxy-BingAI
on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  amd64build:
    name: build amd64 version
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v4

      - name: build linux amd64 version
        run: |
          go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go

      - name: package linux amd64
        run: tar -zcvf go-proxy-bingai-linux-amd64.tar.gz go-proxy-bingai

      - name: upload linux amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: go-proxy-bingai-linux-amd64.tar.gz
          asset_name: go-proxy-bingai-linux-amd64.tar.gz
          asset_content_type: application/gzip

      - name: build windows amd64 version
        run: |
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai.exe main.go

      - name: package windows amd64
        run: tar -zcvf go-proxy-bingai-windows-amd64.tar.gz go-proxy-bingai.exe          

      - name: upload windows amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: go-proxy-bingai-windows-amd64.tar.gz
          asset_name: go-proxy-bingai-windows-amd64.tar.gz
          asset_content_type: application/gzip

  arm64build:
    name: build arm64 version
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: build linux arm64 version
        run: |
          go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai main.go

      - name: package linux arm64
        run: tar -zcvf go-proxy-bingai-linux-arm64.tar.gz go-proxy-bingai

      - name: upload linux arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: go-proxy-bingai-linux-arm64.tar.gz
          asset_name: go-proxy-bingai-linux-arm64.tar.gz
          asset_content_type: application/gzip

      - name: build windows amd64 version
        run: |
          GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -tags netgo -trimpath -o go-proxy-bingai.exe main.go

      - name: package windows arm64
        run: tar -zcvf go-proxy-bingai-windows-arm64.tar.gz go-proxy-bingai.exe          

      - name: upload windows arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: go-proxy-bingai-windows-arm64.tar.gz
          asset_name: go-proxy-bingai-windows-arm64.tar.gz
          asset_content_type: application/gzip
